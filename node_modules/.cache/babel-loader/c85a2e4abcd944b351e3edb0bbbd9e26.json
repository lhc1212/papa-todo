{"ast":null,"code":"var _jsxFileName = \"/Users/aisteinlaw/Documents/Code/PapaReact Project/todo-app/src/Quote.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport \"./Quote.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Quote = () => {\n  _s();\n\n  const [quote, setQuote] = useState({});\n  useEffect(() => {\n    const fetchQuote = async () => await fetch(\"https://type.fit/api/quotes\").then(res => res.json()).then(data => setQuote(data[Math.floor(Math.random() * data.length)]));\n\n    fetchQuote();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quote\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        children: [\"\\\"\", quote.text, \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"- \", quote.author]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Quote, \"BrqoDQIOzdPe1AwPN+/+lsQA01U=\");\n\n_c = Quote;\nexport default Quote;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quote\");","map":{"version":3,"sources":["/Users/aisteinlaw/Documents/Code/PapaReact Project/todo-app/src/Quote.js"],"names":["useEffect","useState","Quote","quote","setQuote","fetchQuote","fetch","then","res","json","data","Math","floor","random","length","text","author"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAO,aAAP;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMK,UAAU,GAAG,YACf,MAAMC,KAAK,CAAC,6BAAD,CAAL,CACDC,IADC,CACKC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADb,EAEDF,IAFC,CAEKG,IAAD,IACFN,QAAQ,CAACM,IAAI,CAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAiBH,IAAI,CAACI,MAAjC,CAAD,CAAL,CAHV,CADV;;AAQAT,IAAAA,UAAU;AACb,GAVQ,EAUN,EAVM,CAAT;AAYA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACI;AAAA,6BAAI;AAAA,yBAAKF,KAAK,CAACY,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,uBAAOZ,KAAK,CAACa,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAtBD;;GAAMd,K;;KAAAA,K;AAwBN,eAAeA,KAAf","sourcesContent":["import { useEffect, useState } from \"react\"\nimport \"./Quote.css\"\n\nconst Quote = () => {\n\n    const [quote, setQuote] = useState({});\n\n    useEffect(() => {\n        const fetchQuote = async () => (\n            await fetch(\"https://type.fit/api/quotes\")\n                .then((res) => res.json())\n                .then((data) => (\n                    setQuote(data[Math.floor(Math.random() * (data.length))])\n                ))\n        )\n\n        fetchQuote();\n    }, [])\n\n    return (\n        <div className=\"quote\">\n            <h2><i>\"{quote.text}\"</i></h2>\n            <h3>- {quote.author}</h3>\n        </div>\n    )\n}\n\nexport default Quote\n"]},"metadata":{},"sourceType":"module"}