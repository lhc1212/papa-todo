{"version":3,"sources":["Quote.js","Todos.js","App.js","reportWebVitals.js","index.js"],"names":["Quote","useState","quote","setQuote","useEffect","a","fetch","then","res","json","data","Math","floor","random","length","fetchQuote","className","text","author","Todos","input","setInput","todos","setTodos","deleteTodo","e","key","preventDefault","newTodos","filter","todo","value","onChange","target","placeholder","IconButton","onClick","uuidv4","complete","type","style","color","map","forEach","completeTodo","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wSA2BeA,EAxBD,WAAO,IAAD,EAEUC,mBAAS,IAFnB,mBAETC,EAFS,KAEFC,EAFE,KAgBhB,OAZAC,qBAAU,YACU,uCAAG,sBAAAC,EAAA,sEACTC,MAAM,+BACPC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OACFP,EAASO,EAAKC,KAAKC,MAAMD,KAAKE,SAAYH,EAAKI,aAJxC,mFAAH,qDAQhBC,KACD,IAGC,sBAAKC,UAAU,QAAf,UACI,6BAAI,kCAAKd,EAAMe,KAAX,SACJ,oCAAOf,EAAMgB,c,2FC6DVC,EA1ED,WAAO,IAAD,EACUlB,mBAAS,IADnB,mBACTmB,EADS,KACFC,EADE,OAEUpB,mBAAS,IAFnB,mBAETqB,EAFS,KAEFC,EAFE,KAYVC,EAAa,SAACC,EAAGC,GACnBD,EAAEE,iBAEF,IAAIC,EAAWN,EAAMO,QAAO,SAACC,GAAD,OAAUA,EAAKJ,MAAQA,KACnDH,EAASK,IAab,OACI,sBAAKZ,UAAU,QAAf,UACI,qBAAKA,UAAU,cAAf,SACI,iCACI,uBAAOe,MAAOX,EAAOY,SAAU,SAACP,GAAD,OAAOJ,EAASI,EAAEQ,OAAOF,QAAQG,YAAY,oBAC5E,cAACC,EAAA,EAAD,CAAYC,QA9BZ,SAACX,GACbA,EAAEE,iBAEmB,IAAjBP,EAAMN,SACVS,EAAS,GAAD,mBAAKD,GAAL,CAAY,CAAEL,KAAMG,EAAOM,IAAKW,cAAUC,UAAU,MAC5DjB,EAAS,MAyBiCkB,KAAK,SAAnC,SACI,cAAC,IAAD,CAASC,MAAO,CAAEC,MAAO,kBAKrC,yCAAYnB,EAAMR,UAElB,qBAAKE,UAAU,cAAf,SACI,cAAC,IAAD,UACKM,EAAMoB,KAAI,SAACZ,GAAD,OACW,IAAlBA,EAAKQ,SACD,sBAAKtB,UAAU,cAAf,UACI,oBAAIA,UAAU,4BAAd,SAA2Cc,EAAKb,OAChD,cAACkB,EAAA,EAAD,CAAYK,MAAO,CAAEC,MAAO,OAASL,QAAS,SAACX,GAAD,OAAOD,EAAWC,EAAGK,EAAKJ,MAAxE,SACI,cAAC,IAAD,SAIR,sBAAKV,UAAU,cAAf,UACI,6BAAKc,EAAKb,OAEV,sBAAKD,UAAU,qBAAf,UACI,cAACmB,EAAA,EAAD,CAAYK,MAAO,CAAEC,MAAO,SAAWL,QAAS,SAACX,GAAD,OAtC3D,SAACA,EAAGC,GACrBD,EAAEE,iBACFL,EAAMqB,SAAQ,SAACb,GACPA,EAAKJ,MAAQA,IACbI,EAAKQ,UAAW,MAGxBf,EAAS,YAAID,IA+BsEsB,CAAanB,EAAGK,EAAKJ,MAA5E,SACI,cAAC,IAAD,MAGJ,cAACS,EAAA,EAAD,CAAYK,MAAO,CAAEC,MAAO,OAASL,QAAS,SAACX,GAAD,OAAOD,EAAWC,EAAGK,EAAKJ,MAAxE,SACI,cAAC,IAAD,uBChDzBmB,EAnBH,WACV,OACE,qBAAK7B,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UAEE,qBAAKA,UAAU,aAAf,SAEE,cAAC,EAAD,MAGF,qBAAKA,UAAU,aAAf,SAEE,cAAC,EAAD,YCJK8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzC,MAAK,YAAkD,IAA/C0C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.eac9fa0c.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\"\nimport \"./Quote.css\"\n\nconst Quote = () => {\n\n    const [quote, setQuote] = useState({});\n\n    useEffect(() => {\n        const fetchQuote = async () => (\n            await fetch(\"https://type.fit/api/quotes\")\n                .then((res) => res.json())\n                .then((data) => (\n                    setQuote(data[Math.floor(Math.random() * (data.length))])\n                ))\n        )\n\n        fetchQuote();\n    }, [])\n\n    return (\n        <div className=\"quote\">\n            <h2><i>\"{quote.text}\"</i></h2>\n            <h3>- {quote.author}</h3>\n        </div>\n    )\n}\n\nexport default Quote\n","import { IconButton } from \"@material-ui/core\";\nimport AddIcon from '@material-ui/icons/Add';\nimport { useState } from \"react\";\nimport FlipMove from \"react-flip-move\"\nimport \"./Todos.css\";\nimport { v4 as uuidv4 } from 'uuid';\nimport DeleteIcon from \"@material-ui/icons/Delete\"\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\n\nconst Todos = () => {\n    const [input, setInput] = useState(\"\");\n    const [todos, setTodos] = useState([]);\n\n    const addTodo = (e) => {\n        e.preventDefault();\n\n        if (input.length === 0) return;\n        setTodos([...todos, { text: input, key: uuidv4(), complete: false }])\n        setInput(\"\");\n    }\n\n    const deleteTodo = (e, key) => {\n        e.preventDefault();\n\n        let newTodos = todos.filter((todo) => todo.key !== key);\n        setTodos(newTodos);\n    }\n\n    const completeTodo = (e, key) => {\n        e.preventDefault();\n        todos.forEach((todo) => {\n            if (todo.key === key) {\n                todo.complete = true;\n            }\n        });\n        setTodos([...todos]);\n    }\n\n    return (\n        <div className=\"todos\">\n            <div className=\"todos__form\">\n                <form>\n                    <input value={input} onChange={(e) => setInput(e.target.value)} placeholder=\"Enter a todo...\" />\n                    <IconButton onClick={addTodo} type=\"submit\">\n                        <AddIcon style={{ color: \"black\" }} />\n                    </IconButton>\n                </form>\n            </div>\n\n            <h2>Todo - {todos.length}</h2>\n\n            <div className=\"todos__list\">\n                <FlipMove>\n                    {todos.map((todo) => (\n                        todo.complete === true ? (\n                            <div className=\"todos__todo\">\n                                <h3 className=\"todos__todoName--complete\">{todo.text}</h3>\n                                <IconButton style={{ color: \"red\" }} onClick={(e) => deleteTodo(e, todo.key)} >\n                                    <DeleteIcon />\n                                </IconButton>\n                            </div>\n                        ) : (\n                            <div className=\"todos__todo\">\n                                <h3>{todo.text}</h3>\n\n                                <div className=\"todos__todoOptions\">\n                                    <IconButton style={{ color: \"green\" }} onClick={(e) => completeTodo(e, todo.key)}>\n                                        <DoneOutlineIcon />\n                                    </IconButton>\n\n                                    <IconButton style={{ color: \"red\" }} onClick={(e) => deleteTodo(e, todo.key)} >\n                                        <DeleteIcon />\n                                    </IconButton>\n                                </div>\n                            </div>\n                        )\n                    ))}\n                </FlipMove>\n            </div>\n        </div >\n    )\n}\n\nexport default Todos\n","import \"./App.css\"\nimport Quote from \"./Quote\"\nimport Todos from \"./Todos\"\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <div className=\"app__body\">\n\n        <div className=\"app__quote\">\n          {/* Quote */}\n          <Quote />\n        </div>\n\n        <div className=\"app__todos\">\n          {/* Todo */}\n          <Todos />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}